// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  configureTransition={[Function]}
  initialLayout={
    Object {
      "height": 0,
      "width": 0,
    }
  }
  lazy={true}
  loaded={
    Array [
      0,
    ]
  }
  navigationState={
    Object {
      "index": 0,
      "routes": Array [
        Object {
          "key": "Profile",
          "routeName": "Profile",
        },
        Object {
          "key": "Feed",
          "routeName": "Feed",
        },
        Object {
          "index": 0,
          "key": "Map",
          "routeName": "Map",
          "routes": Array [
            Object {
              "key": "Init",
              "routeName": "Map",
            },
          ],
        },
      ],
    }
  }
  onChangePosition={[Function]}
  onLayout={[Function]}
  onRequestChangeTab={[Function]}
  render={[Function]}
  renderFooter={[Function]}
  renderHeader={undefined}
  renderPager={[Function]}
  renderScene={[Function]}
  screenProps={undefined}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "flex": 1,
        "overflow": "hidden",
      }
    }
  >
    <RCTScrollView
      alwaysBounceHorizontal={false}
      alwaysBounceVertical={false}
      automaticallyAdjustContentInsets={false}
      bounces={false}
      contentContainerStyle={
        Object {
          "flexGrow": 1,
        }
      }
      contentOffset={
        Object {
          "x": 0,
          "y": 0,
        }
      }
      directionalLockEnabled={true}
      horizontal={true}
      keyboardDismissMode="on-drag"
      keyboardShouldPersistTaps="always"
      onContentSizeChange={null}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onResponderGrant={[Function]}
      onResponderReject={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={undefined}
      onResponderTerminationRequest={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      onScrollShouldSetResponder={[Function]}
      onStartShouldSetResponder={[Function]}
      onStartShouldSetResponderCapture={[Function]}
      onTouchEnd={[Function]}
      onTouchMove={[Function]}
      onTouchStart={[Function]}
      pagingEnabled={true}
      scrollEnabled={true}
      scrollEventThrottle={16}
      scrollsToTop={false}
      sendMomentumEvents={true}
      showsHorizontalScrollIndicator={false}
      style={
        Array [
          Object {
            "flexDirection": "row",
            "flexGrow": 1,
            "flexShrink": 1,
            "overflow": "scroll",
          },
          Object {
            "flexGrow": 1,
          },
        ]
      }
    >
      <RCTScrollContentView
        collapsable={false}
        removeClippedSubviews={undefined}
        style={
          Array [
            Object {
              "flexDirection": "row",
            },
            Object {
              "flexGrow": 1,
            },
          ]
        }
      >
        <View
          style={
            Object {
              "flex": 1,
              "overflow": "hidden",
            }
          }
          testID={undefined}
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#FFF",
                "flex": 1,
                "flexDirection": "column",
                "justifyContent": "center",
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "center",
                }
              }
            >
              <ActivityIndicator
                animating={true}
                color="#999999"
                hidesWhenStopped={true}
                size="large"
              />
            </View>
          </View>
        </View>
        <View
          style={null}
          testID={undefined}
        />
        <View
          style={null}
          testID={undefined}
        />
      </RCTScrollContentView>
    </RCTScrollView>
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#f4f4f4",
            "borderTopColor": "rgba(0, 0, 0, .2)",
            "borderTopWidth": NaN,
            "flexDirection": "row",
            "height": 49,
          },
          undefined,
        ]
      }
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        hitSlop={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "stretch",
            "backgroundColor": "rgba(0, 0, 0, 0)",
            "flex": 1,
            "justifyContent": "flex-end",
          }
        }
        testID={undefined}
      >
        <View
          style={
            Object {
              "flexGrow": 1,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "bottom": 0,
                "justifyContent": "center",
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={false}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": "#e91e63",
                    "fontSize": 30,
                  },
                  undefined,
                  Object {
                    "fontFamily": "Ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                ]
              }
            >
              
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "bottom": 0,
                "justifyContent": "center",
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={false}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": "#929292",
                    "fontSize": 30,
                  },
                  undefined,
                  Object {
                    "fontFamily": "Ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                ]
              }
            >
              
            </Text>
          </View>
        </View>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "backgroundColor": "transparent",
              "color": "rgba(233, 30, 99, 1)",
              "fontSize": 10,
              "marginBottom": 1.5,
              "textAlign": "center",
            }
          }
        >
          Profile
        </Text>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        hitSlop={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "stretch",
            "backgroundColor": "rgba(0, 0, 0, 0)",
            "flex": 1,
            "justifyContent": "flex-end",
          }
        }
        testID={undefined}
      >
        <View
          style={
            Object {
              "flexGrow": 1,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "bottom": 0,
                "justifyContent": "center",
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={false}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": "#e91e63",
                    "fontSize": 30,
                  },
                  undefined,
                  Object {
                    "fontFamily": "Ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                ]
              }
            >
              
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "bottom": 0,
                "justifyContent": "center",
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={false}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": "#929292",
                    "fontSize": 30,
                  },
                  undefined,
                  Object {
                    "fontFamily": "Ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                ]
              }
            >
              
            </Text>
          </View>
        </View>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "backgroundColor": "transparent",
              "color": "rgba(146, 146, 146, 1)",
              "fontSize": 10,
              "marginBottom": 1.5,
              "textAlign": "center",
            }
          }
        >
          Feed
        </Text>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        hitSlop={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "stretch",
            "backgroundColor": "rgba(0, 0, 0, 0)",
            "flex": 1,
            "justifyContent": "flex-end",
          }
        }
        testID={undefined}
      >
        <View
          style={
            Object {
              "flexGrow": 1,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "bottom": 0,
                "justifyContent": "center",
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={false}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": "#e91e63",
                    "fontSize": 30,
                  },
                  undefined,
                  Object {
                    "fontFamily": "Ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                ]
              }
            >
              
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "bottom": 0,
                "justifyContent": "center",
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={false}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": "#929292",
                    "fontSize": 30,
                  },
                  undefined,
                  Object {
                    "fontFamily": "Ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                ]
              }
            >
              
            </Text>
          </View>
        </View>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "backgroundColor": "transparent",
              "color": "rgba(146, 146, 146, 1)",
              "fontSize": 10,
              "marginBottom": 1.5,
              "textAlign": "center",
            }
          }
        >
          Map
        </Text>
      </View>
    </View>
  </View>
</View>
`;
